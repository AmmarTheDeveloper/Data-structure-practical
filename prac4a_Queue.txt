#include <iostream>
using namespace std;

#define MAX 100  // Maximum size of the queue

class Queue {
private:
    int arr[MAX];  // Array to store the queue elements
    int front;     // Index of the front element
    int rear;      // Index of the rear element

public:
    Queue() {
        front = -1;  // Initialize front index
        rear = -1;   // Initialize rear index
    }

    // Function to insert an element in the queue (enqueue operation)
    void enqueue(int element) {
        if (rear == MAX - 1) {
            cout << "Queue is full (Overflow)\n";
            return;
        }

        if (front == -1) {
            front = 0;  // Initialize front index
        }

        rear++;
        arr[rear] = element;
        cout << "Inserted " << element << " into the queue.\n";
    }

    // Function to delete an element from the queue (dequeue operation)
    void dequeue() {
        if (front == -1 || front > rear) {
            cout << "Queue is empty (Underflow)\n";
            return;
        }

        cout << "Deleted " << arr[front] << " from the queue.\n";
        front++;
        
        // Reset the queue if it's empty after dequeue
        if (front > rear) {
            front = rear = -1;
        }
    }

    // Function to display the elements of the queue
    void display() {
        if (front == -1 || front > rear) {
            cout << "Queue is empty\n";
            return;
        }

        cout << "Queue elements: ";
        for (int i = front; i <= rear; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    Queue q;
    int choice, element;

    while (true) {
        cout << "\nQueue Operations:\n";
        cout << "1. Insert (Enqueue)\n";
        cout << "2. Delete (Dequeue)\n";
        cout << "3. Display\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter the element to insert: ";
                cin >> element;
                q.enqueue(element);
                break;

            case 2:
                q.dequeue();
                break;

            case 3:
                q.display();
                break;

            case 4:
                cout << "Exiting...\n";
                return 0;

            default:
                cout << "Invalid choice! Please try again.\n";
        }
    }

    return 0;
}
